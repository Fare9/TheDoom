# In my case I tested with LLVM 3.8.1, but probably in newest llvms
# you'll be able to compile it
CC=/usr/bin/gcc-4.8
CXX=/usr/bin/g++-4.8

# First Makefile variables used as compiler flags
LLVM_HOME=<path to your LLVM folder>

CLANGXX=$(LLVM_HOME)/install/bin/clang++

# llvm-config will give us the necessary flags
# when we execute it with an specific flags (see below)
LLVM_CONFIG?=$(LLVM_HOME)/install/bin/llvm-config

ifndef VERBOSE
QUIET:=@
endif

.PHONY: clean

SRC_DIR?=$(PWD)
LDFLAGS+=$(shell $(LLVM_CONFIG) --ldflags)
COMMON_FLAGS=-Wall -Wextra
CXXFLAGS+=$(COMMON_FLAGS) $(shell $(LLVM_CONFIG) --cxxflags) -fno-rtti
CPPFLAGS+=$(shell $(LLVM_CONFIG) --cppflags) -I$(SRC_DIR)

# check if Darwin mac or other
ifeq ($(shell uname),Darwin)
LOADABLE_MODULE_OPTIONS=-bundle -undefined dynamic_lookup
else
LOADABLE_MODULE_OPTIONS=-shared -Wl,-O1
endif

YANSOCOMBINE=YANSOllvmVmCombine.so
YANSOCOMBINE_OBJECTS=YANSOllvm-vm-combine.o

default: $(YANSOCOMBINE)

%.o : $(SRC_DIR)/%.cpp
	@echo Compiling $*.cpp
	$(QUIET)$(CXX) -c $(CPPFLAGS) $(CXXFLAGS) $<

$(YANSOCOMBINE) : $(YANSOCOMBINE_OBJECTS)
	@echo Linking $@
	$(QUIET)$(CXX) -o $@ $(LOADABLE_MODULE_OPTIONS) $(CXXFLAGS) $(LDFLAGS) $^

clean:
	$(QUIET)rm -rf $(YANSOCOMBINE_OBJECTS) $(YANSOCOMBINE)
